# Generated by Django 5.1.1 on 2024-11-02 16:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0001_initial'),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('thumbnail', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='analysis',
            name='map',
        ),
        migrations.RemoveField(
            model_name='analysis',
            name='team_one',
        ),
        migrations.RemoveField(
            model_name='analysis',
            name='team_two',
        ),
        migrations.RemoveField(
            model_name='player',
            name='team',
        ),
        migrations.CreateModel(
            name='MapAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('thumbnail', models.CharField(blank=True, max_length=100, null=True)),
                ('screenshot', models.CharField(max_length=100)),
                ('team_one_score', models.PositiveIntegerField()),
                ('team_two_score', models.PositiveIntegerField()),
                ('played_date', models.DateTimeField(validators=[django.core.validators.MaxValueValidator(limit_value=django.utils.timezone.now)])),
                ('game_mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.gamemode')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.map')),
                ('team_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_one_maps', to='general.team')),
                ('team_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_two_maps', to='general.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.tournament')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_wins', to='general.team')),
            ],
        ),
        migrations.CreateModel(
            name='CustomAnalysisMapAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('custom_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.customanalysis')),
                ('map_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.mapanalysis')),
            ],
        ),
        migrations.AddField(
            model_name='customanalysis',
            name='map_analyses',
            field=models.ManyToManyField(through='analysis.CustomAnalysisMapAnalysis', to='analysis.mapanalysis'),
        ),
        migrations.CreateModel(
            name='PlayerCustomAnalysisPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('total_kills', models.PositiveIntegerField()),
                ('total_deaths', models.PositiveIntegerField()),
                ('custom_analysis_kd_ratio', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_assists', models.PositiveIntegerField()),
                ('total_ntk', models.PositiveIntegerField()),
                ('custom_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.customanalysis')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMapPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('kills', models.PositiveIntegerField()),
                ('deaths', models.PositiveIntegerField()),
                ('kd_ratio', models.FloatField()),
                ('assists', models.PositiveIntegerField()),
                ('ntk', models.PositiveIntegerField()),
                ('map_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.mapanalysis')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMapPerformanceControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('tiers_captured', models.PositiveIntegerField()),
                ('objective_kills', models.PositiveIntegerField()),
                ('offense_kills', models.PositiveIntegerField()),
                ('defense_kills', models.PositiveIntegerField()),
                ('kills_per_round', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('damage_per_round', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('player_performance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='analysis.playermapperformance')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMapPerformanceHP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('highest_streak', models.PositiveIntegerField()),
                ('damage', models.PositiveIntegerField()),
                ('hill_time', models.PositiveIntegerField()),
                ('average_hill_time', models.PositiveIntegerField()),
                ('objective_kills', models.PositiveIntegerField()),
                ('contested_hill_time', models.PositiveIntegerField()),
                ('kills_per_hill', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('damage_per_hill', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('player_performance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='analysis.playermapperformance')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMapPerformanceSND',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('bombs_planted', models.PositiveIntegerField()),
                ('bombs_defused', models.PositiveIntegerField()),
                ('first_bloods', models.PositiveIntegerField()),
                ('first_deaths', models.PositiveIntegerField()),
                ('kills_per_round', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('damage_per_round', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('player_performance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='analysis.playermapperformance')),
            ],
        ),
        migrations.CreateModel(
            name='SeriesAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('thumbnail', models.CharField(blank=True, max_length=100, null=True)),
                ('played_date', models.DateTimeField(validators=[django.core.validators.MaxValueValidator(limit_value=django.utils.timezone.now)])),
                ('team_one_map_count', models.PositiveIntegerField()),
                ('team_two_map_count', models.PositiveIntegerField()),
                ('team_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_one_series', to='general.team')),
                ('team_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_two_series', to='general.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.tournament')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series_wins', to='general.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSeriesPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('total_kills', models.PositiveIntegerField()),
                ('total_deaths', models.PositiveIntegerField()),
                ('series_kd_ratio', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_assists', models.PositiveIntegerField()),
                ('total_ntk', models.PositiveIntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.player')),
                ('series_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.seriesanalysis')),
            ],
        ),
        migrations.AddField(
            model_name='mapanalysis',
            name='series_analysis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='analysis.seriesanalysis'),
        ),
        migrations.DeleteModel(
            name='Map',
        ),
        migrations.DeleteModel(
            name='Analysis',
        ),
        migrations.DeleteModel(
            name='Player',
        ),
        migrations.DeleteModel(
            name='Team',
        ),
    ]
